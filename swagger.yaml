swagger: '2.0'
info:
  description: >-
    
  version: 1.0.0
  title: Hackathon Scoring Project
host: localhost:8888
tags:
  - name: judge
  - name: score
schemes:
  - http
paths:
  /judge:
    post:
      tags:
        - judge
      summary: Add a new judge to system
      description: ''
      operationId: addjudge
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Judge object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/judge'
      responses:
        '200':
          description: success
  /judge/login:
    post:
      tags:
        - judge
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Judge object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/judge'
      responses:
        '200':
          description: login success
        '400':
          description: Invalid username/password supplied
  /judge/logout:
    post:
      tags:
        - judge
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
        - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  /score:
    get:
      tags:
        - score
      summary: Returns all score
      operationId: getAllScore
      responses:
        '200':
          description: successful operation
  /score/getscore:
    post:
      tags:
        - score
      summary: Returns a list of score belong to a judge
      operationId: getScore
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: enter 01 ~ 05
          required: true
          schema:
            type: object
            properties:
              judge:
                type: string
                format: string
                description: 01~05
            xml:
              name: judge
      responses:
        '200':
          description: successful operation
  /score/save:
    put:
      tags:
        - score
      summary: Save the score already filled
      description: ''
      operationId: scoreSave
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: score information
          required: true
          schema:
            $ref: '#/definitions/score'
      responses:
        '200':
          description: save temp success
  /score/submit:
    put:
      tags:
        - score
      summary: Submit the score
      description: ''
      operationId: scoreSubmit
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: score information
          required: true
          schema:
            $ref: '#/definitions/score'
      responses:
        '200':
          description: Submit Success
definitions:
  judge:
    type: object
    properties:
      username:
        type: string
        format: string
      password:
        type: string
    xml:
      name: judge
  score:
    type: object
    properties:
      rank:
        type: "integer"
        format: "int16"
      team:
        type: "string"
      topic:
        type: "string"
      maintain:
        type: "integer"
        format: "int16"
      innov:
        type: "integer"
        format: "int16"
      design:
        type: "integer"
        format: "int16"
      skill:
        type: "integer"
        format: "int16"
      demo:
        type: "integer"
        format: "int16"
      result:
        type: "number"
        format: "double"
        description: Total score
      comment:
        type: "string"
      judge:
        type: "string"
        enum:
         - "01"
         - "02"
         - "03"
         - "04"
         - "05"
      complete:
        type: "string"
        description: Submitted or not
        enum:
         - "false"
         - "true"
    xml:
      name: Category
